/**
 * Base Node Components Styling
 * Unified styles for BaseNode, NodeHeader, NodeStatusBar, NodeConnectors, NodeBody
 */

/* ============================================
   NODE HEADER - UNIFIED COMPONENT
   ============================================ */

.node-header {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px;
  font-size: 14px;
  font-weight: 600;
  border-bottom: 1px solid var(--node-border-color);
  border-radius: var(--node-header-border-radius) var(--node-header-border-radius) 0 0;
  color: var(--color-text-primary);
}

/* Header variants with data attributes */
.node-header[data-variant="positive"] {
  background: linear-gradient(to bottom, var(--color-header-text-positive-from), var(--color-header-text-positive-to));
}

.node-header[data-variant="loader"] {
  background: linear-gradient(to bottom, var(--color-header-model-loader-from), var(--color-header-model-loader-to));
}

.node-header[data-variant="output"] {
  background: linear-gradient(to bottom, var(--color-header-output-from), var(--color-header-output-to));
}

.node-header[data-variant="panel"] {
  background: linear-gradient(to bottom, var(--color-header-utility-from), var(--color-header-utility-to));
}

.node-icon {
  font-size: 16px;
  line-height: 1;
}

.node-title {
  flex: 1;
}

.node-header-actions {
  display: flex;
  gap: 4px;
  align-items: center;
}

/* ============================================
   NODE STATUS BAR - UNIFIED COMPONENT
   ============================================ */

.node-status-bar {
  padding: 8px 12px;
  border-bottom: 1px solid var(--node-border-color);
  background: var(--color-bg-secondary);
  font-size: 12px;
  display: flex;
  align-items: center;
  gap: 6px;
  position: relative;
  overflow: hidden;
}

/* Animated background gradient for processing state */
.node-status-bar[data-status="processing"]::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(59, 130, 246, 0.3) 50%,
    transparent 100%
  );
  animation: status-bar-progress 1.5s ease-in-out infinite;
  z-index: 0;
}

@keyframes status-bar-progress {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

.status-primary {
  display: flex;
  align-items: center;
  gap: 6px;
  flex: 1;
  position: relative;
  z-index: 1;
}

.status-icon {
  font-size: 14px;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

.status-icon-spinning {
  animation: icon-spin 2s linear infinite;
}

@keyframes icon-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.status-text {
  color: var(--color-accent-warning);
  flex: 1;
}

/* Status variants */
.node-status-bar[data-status="processing"] .status-text {
  color: var(--color-accent-primary);
}

.node-status-bar[data-status="error"] .status-text {
  color: var(--color-accent-error);
}

.node-status-bar[data-status="success"] .status-text {
  color: var(--color-accent-success);
}

.node-status-bar[data-status="idle"] .status-text {
  color: var(--color-text-secondary);
}

/* Remove old progress bar elements - no longer needed */
.status-secondary,
.progress-bar-container,
.progress-bar {
  display: none;
}

/* ============================================
   NODE CONNECTORS - INLINE MULTI-CONNECTOR SYSTEM
   ============================================ */

.node-connectors {
  display: flex;
  flex-direction: column;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  background: rgba(0, 0, 0, 0.1);
}

.connector-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: 32px;
  padding: 4px 8px;
  position: relative;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.connector-row:last-child {
  border-bottom: none;
}

.connector-row:hover {
  background: rgba(255, 255, 255, 0.05);
}

.connector-cell {
  display: flex;
  align-items: center;
  gap: 8px;
  flex: 1;
  position: relative;
}

.connector-input {
  justify-content: flex-start;
}

.connector-output {
  justify-content: flex-end;
}

.connector-handle {
  width: 12px;
  height: 12px;
  border: 2px solid white;
  box-shadow: 0 2px 4px rgba(0,0,0,0.3);
  position: relative;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
}

/* Position handles at the edges */
.connector-input .connector-handle {
  margin-left: -16px;
}

.connector-output .connector-handle {
  margin-right: -16px;
}

.connector-label {
  font-size: 11px;
  font-weight: 600;
  user-select: none;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  white-space: nowrap;
}

/* ============================================
   NODE BODY - CONTENT SECTIONS
   ============================================ */

.node-body {
  flex: 1;
  padding: 12px;
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.node-body-section {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 11px;
  font-weight: 600;
  text-transform: uppercase;
  color: var(--color-text-secondary);
  letter-spacing: 0.5px;
  padding: 4px 0;
}

.section-label {
  flex: 1;
}

.section-toggle {
  font-size: 10px;
  color: var(--color-text-tertiary);
  transition: transform 0.2s ease;
}

.section-header:hover .section-toggle {
  color: var(--color-accent-primary);
}

.section-content {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

/* ============================================
   NODE PANEL STATE CLASSES
   ============================================ */

/* Processing state with pulsating glow */
.node-panel.processing {
  border-color: var(--color-accent-primary);
  animation: processing-pulse var(--duration-pulse) ease-in-out infinite;
}

@keyframes processing-pulse {
  0%, 100% {
    box-shadow: var(--glow-processing), var(--node-shadow);
  }
  50% {
    box-shadow: 0 0 30px var(--color-glow-processing), var(--node-shadow);
  }
}

.node-panel.error {
  border-color: var(--color-accent-error);
}

/* Node entrance animation */
@keyframes node-entrance {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.react-flow__node {
  animation: node-entrance var(--duration-slow) var(--easing-out);
}

/* ============================================
   RESPONSIVE & ACCESSIBILITY
   ============================================ */

/* Ensure text is readable */
.node-header,
.node-status-bar,
.node-body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Focus states for accessibility */
.node-panel:focus-within {
  outline: 2px solid var(--color-accent-primary);
  outline-offset: 2px;
}
